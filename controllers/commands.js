const { Markup } = require('telegraf');

const commandStart = (ctx) =>
  ctx.reply(
    'üò∏ –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Å–∞–¥–∫–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä–∞—Ö —Å —Å–∞–π—Ç–∞ GoMafia.\n‚ö†Ô∏è –ü–æ–∫–∞ —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ',
  );

const commandTest = (ctx) => {
  ctx.reply(
    'test',
    Markup.inlineKeyboard([
      [
        Markup.button.callback('–¢—É—Ä 1', '–¢—É—Ä 1'),
        Markup.button.callback('–¢—É—Ä 2', '–¢—É—Ä 2'),
        Markup.button.callback('–¢—É—Ä 3', '–¢—É—Ä 3'),
        Markup.button.callback('–¢—É—Ä 4', '–¢—É—Ä 4'),
        Markup.button.callback('–¢—É—Ä 5', '–¢—É—Ä 5'),
      ],
      [
        Markup.button.callback('–¢—É—Ä 6', '–¢—É—Ä 6'),
        Markup.button.callback('–¢—É—Ä 7', '–¢—É—Ä 7'),
        Markup.button.callback('–¢—É—Ä 8', '–¢—É—Ä 8'),
        Markup.button.callback('–¢—É—Ä 9', '–¢—É—Ä 9'),
        Markup.button.callback('–¢—É—Ä 10', '–¢—É—Ä 10'),
      ],
      [
        Markup.button.callback('–¢—É—Ä 11', '–¢—É—Ä 11'),
        Markup.button.callback('–¢—É—Ä 12', '–¢—É—Ä 12'),
        Markup.button.callback('–¢—É—Ä 13', '–¢—É—Ä 13'),
      ],
      [Markup.button.callback('‚ùå', 'placementExit')],
    ]),
  );
};

module.exports = {
  commandStart,
  commandTest,
};
